//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "ban")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user_snowflake: i64,
    pub report_id: Option<i64>,
    pub reason: Option<String>,
    pub active: bool,
    pub created_at: Option<DateTime>,
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::report::Entity",
        from = "Column::ReportId",
        to = "super::report::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Report,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserSnowflake",
        to = "super::user::Column::Snowflake",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    User,
}

impl Related<super::report::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Report.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
